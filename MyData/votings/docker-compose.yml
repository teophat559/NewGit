version: '3.8'

services:
  # PHP Application
  app:
    build: .
    container_name: bvote_app
    restart: unless-stopped
    volumes:
      - ./storage:/var/www/html/storage
      - ./uploads:/var/www/html/public/uploads
      - ./logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - mysql
      - redis
    networks:
      - bvote_network

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: bvote_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
      - ./public:/var/www/html/public
      - ./storage/logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - bvote_network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: bvote_mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf:/etc/mysql/conf.d
    ports:
      - "3306:3306"
    networks:
      - bvote_network
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bvote_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - bvote_network

  # PHPMyAdmin (Development only)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: bvote_phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=${DB_USERNAME}
      - PMA_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - bvote_network
    profiles:
      - dev

  # Redis Commander (Development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: bvote_redis_commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - bvote_network
    profiles:
      - dev

  # Backup Service
  backup:
    image: alpine:latest
    container_name: bvote_backup
    restart: unless-stopped
    volumes:
      - ./backups:/backups
      - mysql_data:/var/lib/mysql:ro
    environment:
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    depends_on:
      - mysql
    networks:
      - bvote_network
    command: |
      sh -c "
        while true; do
          echo 'Starting backup...'
          mysqldump -h mysql -u root -p${MYSQL_ROOT_PASSWORD} ${DB_DATABASE} > /backups/backup_$(date +%Y%m%d_%H%M%S).sql
          echo 'Backup completed'
          sleep 86400
        done
      "

  # Monitoring (Optional)
  monitoring:
    image: prom/prometheus:latest
    container_name: bvote_monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - bvote_network
    profiles:
      - monitoring

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  bvote_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
